#!/bin/bash

# VPN-Admin -- A script base system for managing a small OpenVPN system
#
# Copyright (C) 2018 by Matthew Dwight.
#
# This code released under version 3 of the GNU GPL; see COPYING and the
# LICENSE.GPL for this project for full licensing details.
#

# General utilizes and variables used by VPN-Admin Scripts.

# See if easyras3 has been installed.
if [ ! -f ./easyrsa3/easyrsa ] ; then
    printf "Easy-RSA3 not installed.  Run the following command to install.\n"
    printf "bash < (curl -sL https://raw.githubuserconntent.com/mdwight/vpn-admin-install/master/resources/install-easyrsa3-install)\n" 
    exit 1
fi

# Default to nopass for CA and Certificates. 
NOPASS="nopass"

# Set expiry dates on Certificates 
export EASYRSA_CRL_DAYS=7305      # 20 years
export EASYRSA_CA_EXPIRE=7305     # 20 years
export EASYRSA_CERT_EXPIRE=7305   # 20 years

# Main directories for setup and system.
SETUP_DIR=$PWD
SYSTEM_DIR="/etc/openvpn"

function verify {
    while true ; do
        if  [ $# -gt 0 ] ; then
            printf "$1"
        else
            printf "Verify 'YES' or 'NO' > "
        fi

        read USERINPUT

        if [[ -z "$USERINPUT" ]]; then
            continue
        fi
            
        if [ ${USERINPUT^^} == "YES" ] ; then
            return 0
	    fi
    	if [ ${USERINPUT^^} == "NO" ] ; then
            return 1
    	fi
    done
}

function ca_check {
    # see if system has been initialized and the CA created.
    if [ ! -f "$SETUP_DIR/easyrsa3/pki/ca.crt" ] ; then
        printf "ERROR: The system has not been initialized. Run ./initialize to initialize.\n" 
        exit 10
    fi              
    if [ ! -f "$SETUP_DIR/easyrsa3/pki/private/ca.key" ] ; then
        printf "ERROR: The keys have been removed.  Run ./restore-keys and try again.\n" 
        exit 11
    fi              
}  

function sudo_check {
    # make sure user had sudo access
    sudo printf ""
    if [ $? -ne 0 ] ; then 
        exit 1
    fi        
}  
